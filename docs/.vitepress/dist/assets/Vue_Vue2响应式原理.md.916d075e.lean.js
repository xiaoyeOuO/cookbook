import{_ as r,c as a,o as n,x as e,a as t}from"./chunks/framework.0799945b.js";const x=JSON.parse('{"title":"Vue2响应式原理","description":"","frontmatter":{},"headers":[],"relativePath":"Vue/Vue2响应式原理.md"}'),o={name:"Vue/Vue2响应式原理.md"},s=e("h1",{id:"vue2响应式原理",tabindex:"-1"},[t("Vue2响应式原理 "),e("a",{class:"header-anchor",href:"#vue2响应式原理","aria-label":'Permalink to "Vue2响应式原理"'},"​")],-1),c=e("h2",{id:"_80分的回答",tabindex:"-1"},[t("80分的回答 "),e("a",{class:"header-anchor",href:"#_80分的回答","aria-label":'Permalink to "80分的回答"'},"​")],-1),l=e("ol",null,[e("li",null,"先利用Object.defineProperty以及遍历，将对象中的每一个属性都设置getter和setter"),e("li",null,"当页面使用render函数渲染虚拟DOM时，会触发属性中的getter，此时getter中的会有一个watcher来收集依赖，也就是说这个watcher会记录下当前时哪个render函数调用的该属性。"),e("li",null,"当修改该属性时，会调用该属性的setter，此时watcher会将之前记录下来的具体的调用render函数方，并且重新触发render函数，以更新页面。")],-1),d=[s,c,l];function _(i,u,h,p,f,m){return n(),a("div",null,d)}const b=r(o,[["render",_]]);export{x as __pageData,b as default};
